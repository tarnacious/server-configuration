- name: Install packages
  apt:
    name: "{{item}}"
    state: present
    update_cache: yes
  with_items:
    - certbot
    - python-certbot-nginx
    - postgresql
    - python-virtualenv
    - python-psycopg2
    - git
    - nginx
    - supervisor
    - redis-server

- name: Get initial letsencypt SSL certificat
  shell: "systemctl stop nginx && certbot certonly --non-interactive --standalone -d tarnbarford.net --email tarn@tarnbarford.net --agree-tos && systemctl start nginx"
  args:
    creates: "/etc/letsencrypt/live/tarnbarford.net/cert.pem"

- name: Add website user group
  group:
    name: website
    state: present

- name: Add website user
  user:
    name: website
    shell: /bin/bash
    group: website

- name: Ensures website SSH dir exists
  file:
    path: /home/website/.ssh
    state: directory
    owner: website
    group: website

- name: Copy SSH public key
  template:
    src: templates/id_rsa.pub
    dest: /home/website/.ssh/id_rsa.pub
    owner: website
    group: website
    mode: 0600

- name: Copy SSH private key
  template:
    src: templates/id_rsa
    dest: /home/website/.ssh/id_rsa
    owner: website
    group: website
    mode: 0600

- name: create website database
  postgresql_db:
    name: website
  become_user: postgres

- name: create website user
  postgresql_user:
     db: website
     user: website
     password: password
  become: yes
  become_user: postgres

- name: Clone repository
  git:
    repo: git@bitbucket.org:tarnacious/author.git
    dest: /home/website/website
    version: master
    accept_hostkey: True
    force: yes
  become: yes
  become_user: website

- name: Posts repository
  git:
    repo: https://github.com/tarnacious/posts.git
    dest: /home/website/posts
    version: master
    accept_hostkey: True
    force: yes
  become: yes
  become_user: website

- name: Install python environment
  shell: virtualenv .
  become: yes
  become_user: website
  args:
    chdir: /home/website/website
    creates: /home/website/website/bin

- name: Install python packages
  shell: ./bin/pip install -r requirements.txt
  become: yes
  become_user: website
  args:
    chdir: /home/website/website

- name: Copy app.conf
  template:
    src: templates/app.conf
    dest: /home/website/app.conf
    owner: website
    group: website
    mode: 0600

- name: Copy setup.py
  copy:
    src: templates/setup.py
    dest: /home/website/website/setup.py
    owner: website
    group: website

- name: Install python packages
  shell: APP_SETTINGS=/home/website/app.conf ./bin/python setup.py
  become: yes
  become_user: website
  args:
    chdir: /home/website/website

- name: Configure nginx
  copy:
    src: templates/nginx.conf
    dest: /etc/nginx/sites-enabled/default
    owner: root
    group: root
  notify: restart nginx

- name: Configure supervisor
  copy:
    src: templates/website.conf
    dest: /etc/supervisor/conf.d/website.conf
    owner: root
    group: root
  notify: reload supervisor
