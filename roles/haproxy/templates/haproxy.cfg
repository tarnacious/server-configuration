global
  log /dev/log    local0
  log /dev/log    local1 notice
  chroot /var/lib/haproxy
  stats socket /run/haproxy/admin.sock mode 660 level admin
  stats timeout 30s
  user haproxy
  group haproxy
  daemon

  # Default SSL material locations
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private

  # Default ciphers to use on SSL-enabled listening sockets.
  # For more information, see ciphers(1SSL). This list is from:
  #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
  # An alternative list with additional directives can be obtained from
  #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
  ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
  ssl-default-bind-options no-sslv3

defaults
  log     global
  mode    http
  option  httplog
  option  dontlognull
  timeout connect 5000
  timeout client  50000
  timeout server  50000
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http

frontend Local_Server
  bind *:80
  mode http

  # Define hosts
  acl host_owncloud hdr(host) -i owncloud.tarnbarford.net
  acl host_debugproxy hdr(host) -i debugproxy.tarnbarford.net
  acl host_monitoring hdr(host) -i monitoring.tarnbarford.net
  acl host_bab hdr(host) -i bridgesacrossborders.net
  acl host_bab hdr(host) -i www.bridgesacrossborders.net
  acl host_tarnbarford hdr(host) -i tarnbarford.net
  acl host_tarnbarford hdr(host) -i www.tarnbarford.net
  acl host_mail hdr(host) -i mail.tarnbarford.net
  acl host_icinga hdr(host) -i icinga.tarnbarford.net

  ### figure out which one to use
  use_backend owncloud if host_owncloud
  use_backend debugproxy if host_debugproxy
  use_backend bab if host_bab
  use_backend tarnbarford if host_tarnbarford
  use_backend mail if host_mail
  use_backend monitoring if host_monitoring
  use_backend icinga if host_icinga

  default_backend tarnbarford

frontend https
  bind *:443
  mode tcp
  tcp-request inspect-delay 5s
  tcp-request content accept if { req_ssl_hello_type 1 }
  use_backend mail-https-servers if { req_ssl_sni -i mail.tarnbarford.net }
  use_backend debugproxy-https-servers if { req_ssl_sni -i debugproxy.tarnbarford.net }
  use_backend tarn-https-servers if { req_ssl_sni -i www.tarnbarford.net }
  use_backend tarn-https-servers if { req_ssl_sni -i tarnbarford.net }
  use_backend tarn-https-servers if { req_ssl_sni -i blog.tarnbarford.net }
  use_backend bab-https-servers if { req_ssl_sni -i www.bridgesacrossborders.net }
  use_backend bab-https-servers if { req_ssl_sni -i bridgesacrossborders.net }
  use_backend bab-https-servers if { req_ssl_sni -i bab.tarnbarford.net }
  use_backend owncloud-https-servers if { req_ssl_sni -i owncloud.tarnbarford.net }
  use_backend monitoring-https-servers if { req_ssl_sni -i monitoring.tarnbarford.net }
  use_backend icinga-https-servers if { req_ssl_sni -i icinga.tarnbarford.net }

backend monitoring-https-servers
  mode tcp
  balance roundrobin
  server web1.local  {{ hosts.monitoring.ipv4 }}:443

backend mail-https-servers
  mode tcp
  balance roundrobin
  server web1.local  {{ hosts.mail_server.ipv4 }}:443

backend debugproxy-https-servers
  mode tcp
  balance roundrobin
  server web1.local  {{ hosts.debugproxy.ipv4 }}:443

backend tarn-https-servers
  mode tcp
  balance roundrobin
  server web1.local  {{ hosts.tarnbarford.ipv4 }}:443

backend bab-https-servers
  mode tcp
  balance roundrobin
  server web1.local  {{ hosts.bab_website.ipv4 }}:443

backend owncloud-https-servers
  mode tcp
  balance roundrobin
  server web1.local  {{ hosts.owncloud.ipv4 }}:443

backend icinga-https-servers
  mode tcp
  balance roundrobin
  server web1.local  {{ hosts.icinga.ipv4 }}:443

backend mail
  mode http
  balance roundrobin
  option forwardfor
  http-request set-header x-forwarded-port %[dst_port]
  http-request add-header x-forwarded-proto https if { ssl_fc }
  option httpchk head / http/1.1rnhost:localhost
  server web1.local  {{ hosts.mail_server.ipv4 }}:80

backend tarnbarford
  mode http
  balance roundrobin
  option forwardfor
  http-request set-header x-forwarded-port %[dst_port]
  http-request add-header x-forwarded-proto https if { ssl_fc }
  option httpchk head / http/1.1rnhost:localhost
  server web1.local  {{ hosts.tarnbarford.ipv4 }}:80

backend debugproxy
  mode http
  balance roundrobin
  option forwardfor
  http-request set-header x-forwarded-port %[dst_port]
  http-request add-header x-forwarded-proto https if { ssl_fc }
  option httpchk head / http/1.1rnhost:localhost
  server web1.local  {{ hosts.debugproxy.ipv4 }}:80

backend bab
  mode http
  balance roundrobin
  option forwardfor
  http-request set-header x-forwarded-port %[dst_port]
  http-request add-header x-forwarded-proto https if { ssl_fc }
  option httpchk head / http/1.1rnhost:localhost
  server web1.local  {{ hosts.bab_website.ipv4 }}:80

backend monitoring
  mode http
  balance roundrobin
  option forwardfor
  http-request set-header x-forwarded-port %[dst_port]
  http-request add-header x-forwarded-proto https if { ssl_fc }
  option httpchk head / http/1.1rnhost:localhost
  server web1.local  {{ hosts.monitoring.ipv4 }}:80

backend owncloud
  mode http
  balance roundrobin
  option forwardfor
  http-request set-header x-forwarded-port %[dst_port]
  http-request add-header x-forwarded-proto https if { ssl_fc }
  option httpchk head / http/1.1rnhost:localhost
  server web1.local  {{ hosts.owncloud.ipv4 }}:80

backend icinga
  mode http
  balance roundrobin
  option forwardfor
  http-request set-header x-forwarded-port %[dst_port]
  http-request add-header x-forwarded-proto https if { ssl_fc }
  option httpchk head / http/1.1rnhost:localhost
  server web1.local  {{ hosts.icinga.ipv4 }}:80
