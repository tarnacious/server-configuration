apply Service "load" {
  import "generic-service"
  check_command = "load"
  command_endpoint = host.vars.client_endpoint
  assign where host.vars.client_endpoint
}

apply Service "procs" {
  import "generic-service"
  check_command = "procs"
  command_endpoint = host.vars.client_endpoint
  assign where host.vars.client_endpoint
}

apply Service "apt" {
  import "generic-service"
  check_command = "apt"
  command_endpoint = host.vars.client_endpoint
  assign where host.vars.client_endpoint
}

apply Service "disk" {
  import "generic-service"
  check_command = "disk"
  command_endpoint = host.vars.client_endpoint
  assign where host.vars.client_endpoint
}

apply Service "mem" {
  import "generic-service"
  check_command = "mem"
  command_endpoint = host.vars.client_endpoint
  vars.mem_warning = 10
  vars.mem_critical = 5
  vars.mem_free = true
  assign where host.vars.client_endpoint
}

object CheckCommand "raid" {
  import "plugin-check-command"
  command = [ PluginDir + "/check_raid.pl" ]
  timeout = 1m
  arguments = {
  }
}

apply Service "raid" {
  import "generic-service"
  check_command = "raid"
  command_endpoint = host.vars.client_endpoint
  assign where host.name == "hypervisor.tarnbarford.net"
}

object CheckCommand "backup" {
  import "plugin-check-command"
  command = [ PluginDir + "/check_backup" ]
  timeout = 1m
  arguments = {
    "-j" = "$job_name$"
  }
}

{% for job in backup_jobs %}

apply Service "backup-{{ job }}" {
  import "generic-service"
  check_command = "backup"
  vars.job_name = "{{ job }}"
  command_endpoint = host.vars.client_endpoint
  assign where host.name == "bacula.tarnbarford.net"
}

{% endfor %}

