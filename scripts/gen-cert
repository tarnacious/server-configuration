#!/usr/bin/env bash
set -e

if [[ $# -eq 0 ]] ; then
    echo "usage: ${0##*/} fqdn"
    exit 0
fi

ANSIBLE_VAULT=$(find . -name 'ansible-vault' | head -n 1)
DECRYPT="$ANSIBLE_VAULT decrypt"
ENCRYPT="$ANSIBLE_VAULT encrypt"
CA_CERT_DIR=./playbooks/ca
CERT_DIR=./playbooks/ca/client_keys
COMMON_NAME=$1 
SUBJECT="/C=DE/ST=Berlin/L=Berlin/O=tarnbarford.net/OU=tarnbarford.net/CN=$COMMON_NAME"

clean() {
  echo "Cleaning up"

  [ -e "$CERT_DIR/ca.crt" ] && rm "$CERT_DIR/ca.crt"
  [ -e "$CERT_DIR/$COMMON_NAME.csr" ] && rm "$CERT_DIR/$COMMON_NAME.csr"
}

trap clean EXIT

echo "Ensure cert directories"

mkdir -p $CERT_DIR
mkdir -p $CA_CERT_DIR

echo "Creating $CERT_DIR/$COMMON_NAME.key"

openssl genrsa 4096 | $ENCRYPT > $CERT_DIR/$COMMON_NAME.key

echo "Creating $CERT_DIR/$COMMON_NAME.csr"

cat $CERT_DIR/$COMMON_NAME.key | $DECRYPT | openssl req -new -key /dev/stdin -subj $SUBJECT | $ENCRYPT > $CERT_DIR/$COMMON_NAME.csr

echo "Decrypting CA certificate to sign cert"
cat $CA_CERT_DIR/ca.crt | $DECRYPT > $CERT_DIR/ca.crt

echo "Decrypting CSR to sign"
cat $CERT_DIR/$COMMON_NAME.csr | $DECRYPT > $COMMON_NAME.csr

echo "Signing $COMMON_NAME.crt"
cat $CA_CERT_DIR/ca.key | $DECRYPT | openssl x509 -req -days 365 -sha256 -in $COMMON_NAME.csr -CA $CERT_DIR/ca.crt -CAkey /dev/stdin -set_serial 3 | $ENCRYPT > $CERT_DIR/$COMMON_NAME.crt

echo "Done"
